<?xml version="1.0" encoding="utf-8" ?>
<Project xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <Import Project="PostSharp.Version.properties"/>

  <PropertyGroup>
    <_PostSharpImportedTwice Condition="'$(PostSharpImported)'=='True'">True</_PostSharpImportedTwice>
    <PostSharpImported>True</PostSharpImported>
    <PostSharp30Imported>True</PostSharp30Imported>
  </PropertyGroup>

  <!-- Import project overrides -->
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\..\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\..\PostSharp.Custom.targets')"/>
  <Import Project="$(MSBuildProjectDirectory)\PostSharp.Custom.targets" Condition="Exists('$(MSBuildProjectDirectory)\PostSharp.Custom.targets')"/>

  <!-- Try find the PostSharp solution-level config file. -->
  <PropertyGroup Condition="'$(SolutionDir)' != '' AND '$(SolutionDir)' != '*Undefined*'">
    <PostSharpSolutionProject Condition=" '$(PostSharpSolutionProject)'=='' AND Exists('$(SolutionDir)\$(SolutionName).$(Configuration).$(Platform).pssln') ">$(SolutionDir)\$(SolutionName).$(Configuration).$(Platform).pssln</PostSharpSolutionProject>
    <PostSharpSolutionProject Condition=" '$(PostSharpSolutionProject)'=='' AND Exists('$(SolutionDir)\$(SolutionName).$(Configuration).pssln') ">$(SolutionDir)\$(SolutionName).$(Configuration).pssln</PostSharpSolutionProject>
    <PostSharpSolutionProject Condition=" '$(PostSharpSolutionProject)'=='' AND Exists('$(SolutionDir)\$(SolutionName).pssln') ">$(SolutionDir)\$(SolutionName).pssln</PostSharpSolutionProject>
  </PropertyGroup>

  <!-- Try to find the project-level config file -->
  <PropertyGroup>
    <PostSharpProject Condition=" '$(PostSharpProject)'=='' AND Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).$(Configuration).$(Platform).psproj') ">$(MSBuildProjectDirectory)\$(MSBuildProjectName).$(Configuration).$(Platform).psproj</PostSharpProject>
    <PostSharpProject Condition=" '$(PostSharpProject)'=='' AND Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).$(Configuration).psproj') ">$(MSBuildProjectDirectory)\$(MSBuildProjectName).$(Configuration).psproj</PostSharpProject>
    <PostSharpProject Condition=" '$(PostSharpProject)'=='' AND Exists('$(MSBuildProjectDirectory)\$(MSBuildProjectName).psproj') ">$(MSBuildProjectDirectory)\$(MSBuildProjectName).psproj</PostSharpProject>
  </PropertyGroup>

  <!-- Set FastUpdateCheck, the mechanism in Visual Studio that determines whether it is necessary to call MSBuild. -->
  <ItemGroup>
    <UpToDateCheckInput Include="$(PostSharpSolutionProject)" Condition="'$(PostSharpSolutionProject)'!=''"/>
    <UpToDateCheckInput Include="$(PostSharpProject)" Condition="'$(PostSharpProject)'!=''"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\..\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\..\..\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\..\postsharp.config')"/>
    <UpToDateCheckInput Include="$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\postsharp.config" Condition="Exists('$(MSBuildProjectDirectory)\..\..\..\..\..\..\..\postsharp.config')"/>
  </ItemGroup>


  <PropertyGroup>

    <!-- Determines whether a PostSharp project is named after the principal project. -->

    <!-- PostSharp properties -->
    <PostSharpBuild Condition="'$(PostSharpBuild)'==''">Release</PostSharpBuild>
    <PostSharpIgnoreError Condition="'$(PostSharpIgnoreError)'==''">False</PostSharpIgnoreError>
    <PostSharpFailOnUnexpectedMessage Condition="'$(PostSharpFailOnUnexpectedMessage)'==''">False</PostSharpFailOnUnexpectedMessage>
    <PostSharpIntermediateDirectory Condition="'$(PostSharpIntermediateDirectory)'==''">$(IntermediateOutputPath)PostSharp</PostSharpIntermediateDirectory>
    <PostSharpBackupDirectory Condition="'$(PostSharpBackupDirectory)'==''">$(IntermediateOutputPath)Before-PostSharp</PostSharpBackupDirectory>
    <PostSharpCleanIntermediate Condition="'$(PostSharpCleanIntermediate)'==''">False</PostSharpCleanIntermediate>
    <PostSharpSignAssembly Condition="'$(PostSharpSignAssembly)'=='' AND '$(SignAssembly)'!=''">$(SignAssembly)</PostSharpSignAssembly>
    <PostSharpSignAssembly Condition="'$(PostSharpSignAssembly)'==''">False</PostSharpSignAssembly>
    <PostSharpReadyToRunDisabled Condition="'$(PostSharpReadyToRunDisabled)' == ''">False</PostSharpReadyToRunDisabled>
    <!-- For future use, not must be always disabled. -->
    <PostSharpReadyToRunCrossgen2Disabled Condition="'$(PostSharpReadyToRunCrossgen2Disabled)' == ''">True</PostSharpReadyToRunCrossgen2Disabled>
    <PostSharpAttachDebugger Condition="'$(PSAD)'!=''">$(PSAD)</PostSharpAttachDebugger>
    <PostSharpAttachDebugger Condition="'$(PostSharpAttachDebugger)'==''">False</PostSharpAttachDebugger>
    <PostSharpWriteWeavingSymbols Condition="'$(PostSharpWriteWeavingSymbols)'==''">True</PostSharpWriteWeavingSymbols>
    <PostSharpSymbolFile Condition="'$(PostSharpSymbolFile)'==''">$(OutDir)$(AssemblyName).pssym</PostSharpSymbolFile>
    <PostSharpSymbolLocationFile>$(OutDir)\$(TargetName).pspdb</PostSharpSymbolLocationFile>
    <PostSharpClientAttachDebugger Condition="'$(PostSharpClientAttachDebugger)'==''">False</PostSharpClientAttachDebugger>
    <PostSharpUseHardLink Condition="'$(PostSharpUseHardLink)'==''">True</PostSharpUseHardLink>
    <PostSharpConstraintVerificationEnabled Condition="'$(PostSharpConstraintVerificationEnabled)'==''">True</PostSharpConstraintVerificationEnabled>
    <PostSharpRuntimeVerificationEnabled Condition="'$(PostSharpRuntimeVerificationEnabled)'=='' AND '$(Optimize)'!='True'">True</PostSharpRuntimeVerificationEnabled>
    <PostSharpRuntimeVerificationEnabled Condition="'$(PostSharpRuntimeVerificationEnabled)'==''">False</PostSharpRuntimeVerificationEnabled>
    <SkipPostSharp Condition="'$(SkipPostSharp)'==''">False</SkipPostSharp>
    <PostSharpChangeAppConfigDisabled Condition="'$(PostSharpChangeAppConfigDisabled)'==''">False</PostSharpChangeAppConfigDisabled>
    <PostSharpMutexTimeout Condition="'$(PostSharpMutexTimeout)' == ''">600000</PostSharpMutexTimeout>
    <PostSharpPipeTimeout Condition="'$(PostSharpPipeTimeout)' == ''">600000</PostSharpPipeTimeout>
    <PostSharpLockedFileTimeout Condition="'$(PostSharpLockedFileTimeout)' == ''">60000</PostSharpLockedFileTimeout>
    <PostSharpLockedFileWarningTimeout Condition="'$(PostSharpLockedFileWarningTimeout)' == ''">250</PostSharpLockedFileWarningTimeout>
	<PostSharpUnsupportedSdkWarningDisabled Condition="'$(PostSharpUnsupportedSdkWarningDisabled)'==''">True</PostSharpUnsupportedSdkWarningDisabled>
	  
    <!-- Always disable when build from VS2015 and older. -->
    <PostSharpDebuggerExtensionsMode Condition="'$(PostSharpVsixVersion)'!='' AND '$(MSBuildToolsVersion)' != 'Current' AND '$(MSBuildToolsVersion)' &lt; '14.0' ">Disabled</PostSharpDebuggerExtensionsMode>
    <!-- Enable when optimizations are disabled and pdb enabled. -->
    <PostSharpDebuggerExtensionsMode Condition="'$(PostSharpDebuggerExtensionsMode)'=='' AND '$(Optimize)'!='True' AND '$(DebugType)' != 'None'">Enabled</PostSharpDebuggerExtensionsMode>
    <!-- Disabled otherwise. -->
    <PostSharpDebuggerExtensionsMode Condition="'$(PostSharpDebuggerExtensionsMode)'==''">Disabled</PostSharpDebuggerExtensionsMode>
    <PostSharpSupportedCSharpVersion>10.0</PostSharpSupportedCSharpVersion>
    <PostSharpSupportedVBVersion>16.9</PostSharpSupportedVBVersion>
    <_PostSharpBuildDependenciesFile>$(PostSharpIntermediateDirectory)\AdditionalBuildDependencies.txt</_PostSharpBuildDependenciesFile>
    <_PostSharpTouchFile>$(PostSharpIntermediateDirectory)\touch</_PostSharpTouchFile>

    <!-- Deterministic build. -->
    <PostSharpDeterministic>$(Deterministic)</PostSharpDeterministic>
    <PostSharpDeterministic Condition="'$(PostSharpDeterministic)' == ''">False</PostSharpDeterministic>

    <!-- Disabling restore of compiler's build-time dependencies. -->
    <PostSharpDependencyRestoreDisabled Condition="'$(PostSharpDependencyRestoreDisabled)' == ''">False</PostSharpDependencyRestoreDisabled>  
    
    <!-- Attempt to detect .NET Core SDK version and directory. -->
    <_PostSharpNETCoreSdkFile Condition="Exists($(NETCoreSdkBundledVersionsProps))">$([System.IO.Path]::GetFullPath($(NETCoreSdkBundledVersionsProps)))</_PostSharpNETCoreSdkFile>
    <_PostSharpNETCoreSdkFile Condition="Exists($(NETCoreSdkBundledCliToolsProps))">$([System.IO.Path]::GetFullPath($(NETCoreSdkBundledCliToolsProps)))</_PostSharpNETCoreSdkFile>
    <PostSharpNETCoreSdkDirectory Condition="'$(PostSharpNETCoreSdkDirectory)' == '' AND '$(_PostSharpNETCoreSdkFile)' != ''">$([System.IO.Path]::GetDirectoryName($(_PostSharpNETCoreSdkFile)))</PostSharpNETCoreSdkDirectory>
    <PostSharpNETCoreSdkVersion Condition="'$(PostSharpNETCoreSdkVersion)' == '' AND '$(DotNetCoreSdkVersion)' != ''">$(DotNetCoreSdkVersion)</PostSharpNETCoreSdkVersion>
    <PostSharpNETCoreSdkVersion Condition="'$(PostSharpNETCoreSdkVersion)' == '' AND '$(NETCoreSdkVersion)' != ''">$(NETCoreSdkVersion)</PostSharpNETCoreSdkVersion>
    <PostSharpNETCoreSdkVersion Condition="'$(PostSharpNETCoreSdkVersion)' == '' AND '$(_PostSharpNETCoreSdkFile)' != ''">$([System.IO.Path]::GetFileName($(_PostSharpNETCoreSdkFile)))</PostSharpNETCoreSdkVersion>
    
    <!-- Location analyzer is disabled during design-time build. -->
    <PostSharpRoslynAnalyzerDisabled Condition="'$(PostSharpRoslynAnalyzerDisabled)' == '' AND '$(DesignTimeBuild)' == 'True'">True</PostSharpRoslynAnalyzerDisabled>
      
    <!-- -->
    <PostSharpUseLinksIfPossible Condition="'$(PostSharpUseLinksIfPossible)' == ''">True</PostSharpUseLinksIfPossible>
</PropertyGroup>


  <!-- Settings that depend on the target framework -->
  <Choose>
    <When Condition="'$(_IsNETCoreOrNETStandard)'!='true'">
      <PropertyGroup>
        <PostSharpToolsFrameworkIdentifier>net</PostSharpToolsFrameworkIdentifier>
        <PostSharpToolsFrameworkVersion>472</PostSharpToolsFrameworkVersion>
        <PostSharpTargetProcessor Condition="'$(PostSharpTargetProcessor)'=='' AND ( '$(PlatformTarget)'=='AMD64' OR '$(PlatformTarget)'=='x64')">x64</PostSharpTargetProcessor>
        <PostSharpTargetProcessor Condition="'$(PostSharpTargetProcessor)'==''">x86</PostSharpTargetProcessor>
        <PostSharpUsePipeServer Condition="'$(PostSharpHost)'=='Native'">False</PostSharpUsePipeServer>
        <PostSharpUsePipeServer Condition="'$(PostSharpUsePipeServer)'==''">True</PostSharpUsePipeServer>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <PostSharpToolsFrameworkIdentifier>netcoreapp</PostSharpToolsFrameworkIdentifier>
        <PostSharpToolsFrameworkVersion>2.1</PostSharpToolsFrameworkVersion>
        <PostSharpTargetProcessor Condition="'$(PostSharpTargetProcessor)'==''">$(PlatformTarget)</PostSharpTargetProcessor>
        <PostSharpUsePipeServer>False</PostSharpUsePipeServer>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Settings that depend on the framework running MSBuild -->
  <Choose>
    <When Condition="'$(MSBuildRuntimeType)' == 'Core'">
      <PropertyGroup>
        <PostSharpBuildToolsFramework>netcoreapp2.1</PostSharpBuildToolsFramework>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <PostSharpBuildToolsFramework>net472</PostSharpBuildToolsFramework>
      </PropertyGroup>
    </Otherwise>
  </Choose>
  
  <PropertyGroup>    
    <PostSharpToolsFramework>$(PostSharpToolsFrameworkIdentifier)$(PostSharpToolsFrameworkVersion)</PostSharpToolsFramework>
    <_PostSharpBinDirectoryName>bin.$(PostSharpBuild)\tools\$(PostSharpToolsFramework)</_PostSharpBinDirectoryName>
    <_PostSharpMSBuildAssemblyName>PostSharp.MSBuild.v$(PostSharpVersion).$(PostSharpBuild).dll</_PostSharpMSBuildAssemblyName>
  </PropertyGroup>

  <!--
    PostSharp's shared directories (shared between versions of PostSharp):      
      * PostSharpBinaryDirectory              - extracted PostSharp binaries. Each version has a subdirectory.
      * PostSharpCacheDirectory               - caches used by PostSharp, shared between versions of PostSharp and between builds.
      * PostSharpSpoolDirectory               - directory used to store error reports and other spooled information.
      * PostSharpDependencyDirectory          - build dependencies of PostSharp, shared between versions of PostSharp and between builds.
      * PostSharpConfigDirectory              - configuration files specific to this machine.
      * PostSharpUserConfigDirectory          - configuration files specific to this user.
      * PostSharpTempDirectory                - temp files.
      * PostSharpLogDirectory                 - log files.
  -->

  <Choose>
    <!-- Windows Vista and later -->
    <When Condition="'$(PROGRAMDATA)' != ''">
      <PropertyGroup>
        <_PostSharpWindowsProgramDataDefaultDirectory>$(PROGRAMDATA)\PostSharp</_PostSharpWindowsProgramDataDefaultDirectory>
      </PropertyGroup>         
    </When>
    <!-- Windows XP -->
    <When Condition="'$(LOCALAPPDATA)' != ''">
      <PropertyGroup>
        <_PostSharpWindowsProgramDataDefaultDirectory>$(LOCALAPPDATA)\PostSharp</_PostSharpWindowsProgramDataDefaultDirectory>
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <_PostSharpWindowsProgramDataDefaultDirectory>$(TEMP)\PostSharp</_PostSharpWindowsProgramDataDefaultDirectory>
      </PropertyGroup>
    </Otherwise>
  </Choose>

  <!-- Set default value for PostSharp binaries directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultBinaryDirectory)' == ''">
      <Choose>        
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultBinaryDirectory>\var\tmp\postsharp</PostSharpDefaultBinaryDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultBinaryDirectory>$(_PostSharpWindowsProgramDataDefaultDirectory)</PostSharpDefaultBinaryDirectory>
          </PropertyGroup>
        </Otherwise>        
      </Choose>
    </When>    
  </Choose>

  <!-- Set default value for PostSharp cache directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultCacheDirectory)' == ''">
      <Choose>        
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultCacheDirectory>\var\tmp\postsharp\cache</PostSharpDefaultCacheDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultCacheDirectory>$(_PostSharpWindowsProgramDataDefaultDirectory)</PostSharpDefaultCacheDirectory>
          </PropertyGroup>
        </Otherwise>        
      </Choose>
    </When>    
  </Choose>

  <!-- Set default value for spool directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultSpoolDirectory)' == ''">
      <Choose>
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultSpoolDirectory>\var\tmp\postsharp\spool</PostSharpDefaultSpoolDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultSpoolDirectory>$(_PostSharpWindowsProgramDataDefaultDirectory)\Spool</PostSharpDefaultSpoolDirectory>
          </PropertyGroup>
        </Otherwise>
      </Choose>
    </When>
  </Choose>

  <!-- Set default value for PostSharp dependencies directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultDependencyDirectory)' == ''">
      <Choose>        
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultDependencyDirectory>\var\tmp\postsharp\NuGetFallback</PostSharpDefaultDependencyDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultDependencyDirectory>$(_PostSharpWindowsProgramDataDefaultDirectory)\NuGetFallback</PostSharpDefaultDependencyDirectory>
          </PropertyGroup>
        </Otherwise>        
      </Choose>
    </When>    
  </Choose>

  <!-- Set default value for machine config directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultConfigDirectory)' == ''">
      <Choose>
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultConfigDirectory>\etc\postsharp</PostSharpDefaultConfigDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultConfigDirectory>$(_PostSharpWindowsProgramDataDefaultDirectory)\Config</PostSharpDefaultConfigDirectory>
          </PropertyGroup>  
      </Otherwise>
      </Choose>
    </When>
  </Choose>

  <!-- Set default value for user config directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultUserConfigDirectory)' == ''">
      <Choose>
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultUserConfigDirectory>$(HOME)\.config\postsharp</PostSharpDefaultUserConfigDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultUserConfigDirectory>$(APPDATA)\Postsharp</PostSharpDefaultUserConfigDirectory>
          </PropertyGroup>
        </Otherwise>
      </Choose>
    </When>
  </Choose>

  <!-- Set default value for Temp directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultTempDirectory)' == ''">
      <Choose>
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultTempDirectory>\var\tmp\postsharp\temp</PostSharpDefaultTempDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultTempDirectory>$(TEMP)\PostSharp</PostSharpDefaultTempDirectory>
          </PropertyGroup>
        </Otherwise>
      </Choose>
    </When>
  </Choose>

  <!-- Set default value for Logs directory. -->
  <Choose>
    <When Condition="'$(PostSharpDefaultLogDirectory)' == ''">
      <Choose>
        <When Condition="'$(OS)' == 'Unix'">
          <PropertyGroup>
            <PostSharpDefaultLogDirectory>\var\tmp\postsharp\logs</PostSharpDefaultLogDirectory>
          </PropertyGroup>
        </When>
        <Otherwise>
          <PropertyGroup>
            <PostSharpDefaultLogDirectory>$(TEMP)\PostSharp\Logs</PostSharpDefaultLogDirectory>
          </PropertyGroup>
        </Otherwise>
      </Choose>
    </When>
  </Choose>

  <!-- Detect PostSharp's own development environment. -->
  <PropertyGroup>
    <_PostSharpMSBuildAssemblyInternalPath>$(MSBuildThisFileDirectory)\bin.$(PostSharpBuild)\tools\$(PostSharpBuildToolsFramework)\$(_PostSharpMSBuildAssemblyName)</_PostSharpMSBuildAssemblyInternalPath>
  </PropertyGroup>
  
  <PropertyGroup Condition="'$(PostSharpToolsDirectory)'=='' AND Exists('$(_PostSharpMSBuildAssemblyInternalPath)')">
    <_PostSharpInternalEnvironment>True</_PostSharpInternalEnvironment>
    <PostSharpToolsDirectory>$(MSBuildThisFileDirectory)</PostSharpToolsDirectory>
    <PostSharpMSBuildAssemblyPath>$(_PostSharpMSBuildAssemblyInternalPath)</PostSharpMSBuildAssemblyPath>
  </PropertyGroup>

  <!-- Set default values of individual directories. -->
  <Choose>
    <When Condition="'$(_PostSharpInternalEnvironment)' == 'True'">
      <PropertyGroup>
        <!-- PostSharp's own development environment. -->
        <PostSharpBinaryDirectory Condition="'$(PostSharpBinaryDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Bin</PostSharpBinaryDirectory>
        <PostSharpCacheDirectory Condition="'$(PostSharpCacheDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Cache</PostSharpCacheDirectory>
        <PostSharpSpoolDirectory Condition="'$(PostSharpSpoolDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Spool</PostSharpSpoolDirectory>
        <PostSharpDependencyDirectory Condition="'$(PostSharpDependencyDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\NugetFallback</PostSharpDependencyDirectory>
        <PostSharpConfigDirectory Condition="'$(PostSharpConfigDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Config</PostSharpConfigDirectory>
        <PostSharpUserConfigDirectory Condition="'$(PostSharpUserConfigDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\UserConfig</PostSharpUserConfigDirectory>
        <PostSharpTempDirectory Condition="'$(PostSharpTempDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Temp</PostSharpTempDirectory>
        <PostSharpLogDirectory Condition="'$(PostSharpLogDirectory)' == ''">$(MSBuildThisFileDirectory)\Temp\ProgramData\Logs</PostSharpLogDirectory>
      </PropertyGroup>
    </When>
    <When Condition="'$(PostSharpProgramDataDirectory)' != ''">
      <PropertyGroup>
        <!-- If the legacy PostSharpProgramDataDirectory is set, fallback to the old behavior. -->
        <PostSharpBinaryDirectory Condition="'$(PostSharpBinaryDirectory)' == ''">$(PostSharpProgramDataDirectory)</PostSharpBinaryDirectory>
        <PostSharpCacheDirectory Condition="'$(PostSharpCacheDirectory)' == ''">$(PostSharpProgramDataDirectory)</PostSharpCacheDirectory>
        <PostSharpSpoolDirectory Condition="'$(PostSharpSpoolDirectory)' == ''">$(PostSharpProgramDataDirectory)\Spool</PostSharpSpoolDirectory>
        <PostSharpDependencyDirectory Condition="'$(PostSharpDependencyDirectory)' == ''">$(PostSharpProgramDataDirectory)\NuGetFallback</PostSharpDependencyDirectory>
        <PostSharpConfigDirectory Condition="'$(PostSharpConfigDirectory)' == ''">$(PostSharpDefaultConfigDirectory)</PostSharpConfigDirectory>
        <PostSharpUserConfigDirectory Condition="'$(PostSharpUserConfigDirectory)' == ''">$(PostSharpDefaultUserConfigDirectory)</PostSharpUserConfigDirectory>
        <PostSharpTempDirectory Condition="'$(PostSharpTempDirectory)' == ''">$(PostSharpDefaultTempDirectory)</PostSharpTempDirectory>
        <PostSharpLogDirectory Condition="'$(PostSharpLogDirectory)' == ''">$(PostSharpDefaultLogDirectory)</PostSharpLogDirectory>      
      </PropertyGroup>
    </When>
    <Otherwise>
      <PropertyGroup>
        <PostSharpBinaryDirectory Condition="'$(PostSharpBinaryDirectory)' == ''">$(PostSharpDefaultBinaryDirectory)</PostSharpBinaryDirectory>
        <PostSharpCacheDirectory Condition="'$(PostSharpCacheDirectory)' == ''">$(PostSharpDefaultCacheDirectory)</PostSharpCacheDirectory>
        <PostSharpSpoolDirectory Condition="'$(PostSharpSpoolDirectory)' == ''">$(PostSharpDefaultSpoolDirectory)</PostSharpSpoolDirectory>
        <PostSharpDependencyDirectory Condition="'$(PostSharpDependencyDirectory)' == ''">$(PostSharpDefaultDependencyDirectory)</PostSharpDependencyDirectory>
        <PostSharpConfigDirectory Condition="'$(PostSharpConfigDirectory)' == ''">$(PostSharpDefaultConfigDirectory)</PostSharpConfigDirectory>
        <PostSharpUserConfigDirectory Condition="'$(PostSharpUserConfigDirectory)' == ''">$(PostSharpDefaultUserConfigDirectory)</PostSharpUserConfigDirectory>
        <PostSharpTempDirectory Condition="'$(PostSharpTempDirectory)' == ''">$(PostSharpDefaultTempDirectory)</PostSharpTempDirectory>
        <PostSharpLogDirectory Condition="'$(PostSharpLogDirectory)' == ''">$(PostSharpDefaultLogDirectory)</PostSharpLogDirectory>
      </PropertyGroup>  
    </Otherwise>
  </Choose>

  <ItemGroup>
    <PostSharpWritableCommonDirectory Include="$(PostSharpBinaryDirectory)">
      <FriendlyName>PostSharp Binary directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
    <PostSharpWritableCommonDirectory Include="$(PostSharpCacheDirectory)">
      <FriendlyName>PostSharp Cache directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
    <PostSharpWritableCommonDirectory Include="$(PostSharpSpoolDirectory)">
      <FriendlyName>PostSharp Spool directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
    <PostSharpWritableCommonDirectory Include="$(PostSharpDependencyDirectory)">
      <FriendlyName>PostSharp Dependency directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
    <PostSharpWritableCommonDirectory Include="$(PostSharpTempDirectory)">
      <FriendlyName>PostSharp Temp directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
      <PostSharpWritableCommonDirectory Include="$(PostSharpLogDirectory)">
      <FriendlyName>PostSharp Log directory</FriendlyName>
    </PostSharpWritableCommonDirectory>
  </ItemGroup>

  <PropertyGroup Condition="'$(PostSharpToolsDirectory)'==''">
    <_ZipKeyFile>$(MSBuildThisFileDirectory)\$(PostSharpToolsFramework)\PostSharp.Compiler.Engine.dll</_ZipKeyFile>
    <!--We are working with the ZIP distribution-->
    <PostSharpToolsDirectory Condition="Exists('$(_ZipKeyFile)')">$(MSBuildThisFileDirectory)</PostSharpToolsDirectory>
  </PropertyGroup>

  <PropertyGroup Condition="'$(PostSharpToolsDirectory)'==''"> 
    <!--We are working with the NuGet distribution-->
    <PostSharpToolsDirectory>$(PostSharpBinaryDirectory)\$(PostSharpVersion)</PostSharpToolsDirectory>
  </PropertyGroup>

  <PropertyGroup Condition="'$(PostSharpMSBuildAssemblyPath)'==''">
    <PostSharpMSBuildAssemblyPath>$(MSBuildThisFileDirectory)\$(PostSharpBuildToolsFramework)\$(_PostSharpMSBuildAssemblyName)</PostSharpMSBuildAssemblyPath>
  </PropertyGroup>

  <PropertyGroup>
    <_PostSharpDebugType>$(DebugType)</_PostSharpDebugType>
    <!-- PostSharp always requires a PDB file for message resolution and VCS licensing control -->
    <DebugType Condition="'$(DebugType)'=='none'">pdbonly</DebugType>
  </PropertyGroup>
</Project>
